name: Pytest
on:
  workflow_call:
  workflow_dispatch:
jobs:
  test:
    strategy:
      matrix:
        include: #ckan-image see https://github.com/ckan/ckan-docker-base, ckan-version controls other image tags
          - ckan-version: "2.11"
            ckan-image: "2.11-py3.10"
            experimental: false
          - ckan-version: "2.10"
            ckan-image: "2.10-py3.10"
            experimental: false
          - ckan-version: "master"
            ckan-image: "master"
            experimental: true  # master is unstable, good to know if we are compatible or not
      fail-fast: false

    name: ${{ matrix.experimental && '**Fail_Ignored** ' || '' }} CKAN ${{ matrix.ckan-version }}
    runs-on: ubuntu-latest
    container:
      image: ckan/ckan-dev:${{ matrix.ckan-image }}
      options: --user root
    services:
      solr:
        image: ckan/ckan-solr:${{ matrix.ckan-version }}-solr9
      postgres:
        image: ckan/ckan-postgres-dev:${{ matrix.ckan-version }}
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        #options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
          image: redis:7
    env:
      CKAN_SQLALCHEMY_URL: postgresql://ckan_default:pass@postgres/ckan_test
      CKAN_DATASTORE_WRITE_URL: postgresql://datastore_write:pass@postgres/datastore_test
      CKAN_DATASTORE_READ_URL: postgresql://datastore_read:pass@postgres/datastore_test
      CKAN_SOLR_URL: http://solr:8983/solr/ckan
      CKAN_REDIS_URL: redis://redis:6379/1

    steps:
    - uses: actions/checkout@v4
      continue-on-error: ${{ matrix.experimental }}
    - name: Install requirements
      # Install any extra requirements your extension has here (dev requirements, other extensions etc)
      run: |
        apt install git
        pip install -e ".[test]"
      # .[test] will install base dependencies as well as the test optional group

    - name: Setup extension
      # Extra initialization steps
      run: |
        # Replace default path to CKAN core config file with the one on the container
        sed -i -e 's/use = config:.*/use = config:\/srv\/app\/src\/ckan\/test-core.ini/' test.ini

        ckan -c test.ini db init
        mkdir -p results

    - name: ${{ matrix.experimental && '**Fail_Ignored** ' || '' }} Run tests
      continue-on-error: ${{ matrix.experimental }}
      run: |
        pytest --ckan-ini=test.ini --cov=ckanext.selfinfo ckanext/selfinfo --cov-branch --cov-report=xml --junit-xml=./results/junit_results.xml -o junit_family=legacy

    - name: Generate Test results artifacts
      continue-on-error: ${{ matrix.experimental }}
      if: ${{ !cancelled() }}
      run: |
        set -ex
        junit2html results/junit_results.xml results/pytest-results.html
        
        coverage html -d results/coverage_html


    - name: Pytest Coverage Console Report
      continue-on-error: ${{ matrix.experimental }}
      if: ${{ !cancelled() }}
      run: |
        set -ex
        coverage report -m

    - name: Upload HTML coverage report
      uses: actions/upload-artifact@v4
      continue-on-error: ${{ matrix.experimental }}
      if: ${{ !cancelled() }}
      with:
        name: combined-test-coverage-reports-${{ matrix.ckan-version }}
        path: results

    - name: ${{ matrix.experimental && '**Fail_Ignored** ' || '' }} Test Summary
      uses: test-summary/action@v2
      continue-on-error: ${{ matrix.experimental }}
      with:
        paths: "results/junit_results.xml"
      if: ${{ !cancelled() }}


    - name: Install packages required for codecov
      continue-on-error: ${{ matrix.experimental }}
      if: ${{ !cancelled() }}
      run: |
        #ubuntu based images    
        apt-get install -y --no-install-recommends curl gpg

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      if: ${{ !cancelled() }}
      continue-on-error: true #don't fail if we can't upload (ie a fork that does not have integration plugged in)
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: false # optional (default = false)


    - name: Get Cover
      uses: orgoro/coverage@3f13a558c5af7376496aa4848bf0224aead366ac #v3.2
      if: ${{ !cancelled() }}
      continue-on-error: true #don't fail if we can't upload (ie a fork that does not have integration plugged in)
      with:
          coverageFile: coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload test results to Codecov
      uses: codecov/test-results-action@v1
      if: ${{ !cancelled() }}
      continue-on-error: true #don't fail if we can't upload (ie a fork that does not have integration plugged in)
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: false # optional (default = false)

